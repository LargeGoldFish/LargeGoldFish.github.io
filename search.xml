<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[玩具谜题]]></title>
    <url>%2F2020%2F02%2F14%2F%E7%8E%A9%E5%85%B7%E8%B0%9C%E9%A2%98%2F</url>
    <content type="text"><![CDATA[&ensp;一道基础的模拟题，模拟题感觉需要对题目描述正确理解，用代码来模拟其中的变化情况，但是题目往往描述的复杂多变，需要理解之后精简才能方面模拟还要注意结合题目实际性质，比如此题中小人的朝向不同和给的数字过大，可以统一处理成顺时针和逆时针后操作，数字过大可以%总人数不影响模拟，不管怎么转小人的编号也不会小于1和大于n，所以模拟的时候要注意题目性质，之后代码实现能力过关就没问题了。 code: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include&lt;iostream&gt;#include&lt;string&gt;using namespace std;const int maxn=100010;struct person&#123; int toward; string position;&#125;p[maxn];struct key&#123; int di; int si;&#125;k[maxn]; int n,m; int solve(int s,int i); int set(int z); int way(int x,int y);int main()&#123; cin&gt;&gt;n&gt;&gt;m; for(int i=1;i&lt;=n;i++)&#123; cin&gt;&gt;p[i].toward&gt;&gt;p[i].position; &#125; for(int i=1;i&lt;=m;i++)&#123; cin&gt;&gt;k[i].di&gt;&gt;k[i].si; &#125; // int ans=solve(1,1); cout&lt;&lt;p[ans].position; return 0;&#125;int solve(int s,int i)&#123; if(i==m+1) return s; if(way(p[s].toward,k[i].di)==1) return solve(set(s+(k[i].si%n)),i+1); else return solve(set(s-(k[i].si%n)),i+1);&#125;int way(int x,int y)&#123; if((x==0&amp;&amp;y==0)||(x==1&amp;&amp;y==1)) return 0; else return 1; &#125;int set(int z)&#123; if(z&gt;n) z=z%n; else if(z&lt;=0) z=z+n;//!! return z;&#125; &ensp; 倒数第三行少了个等于导致wa了一个点 ！mengbier]]></content>
      <categories>
        <category>Noip提高组</category>
        <category>模拟算法</category>
      </categories>
      <tags>
        <tag>细品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Saruman's Army]]></title>
    <url>%2F2020%2F02%2F13%2FSarumansArmy%2F</url>
    <content type="text"><![CDATA[&ensp;一道挺基础的贪心算法题，但是我还是水了半天才写出来，我做题像是用猜的，感觉的，这样可不行啊，要锻炼分析，思考的能力。 123456789101112131415161718192021222324252627282930313233343536#include&lt;iostream&gt;#include&lt;algorithm&gt;using namespace std;int r,n;int l[1010];int mark(int);int point(int);int main()&#123; cin&gt;&gt;r&gt;&gt;n; int x,begin=1010; for(int i=1;i&lt;=n;i++)&#123; cin&gt;&gt;x; l[x]=1; begin=min(begin,x); &#125;// int ans=0; while(1)&#123; int marknum=mark(begin); ans++; begin=point(marknum); if(!begin) break;&#125; cout&lt;&lt;ans;return 0;&#125; int mark(int pointnum)&#123; for(int i=pointnum+r;i&gt;=pointnum;i--) if(l[i]) return i; return pointnum; &#125; int point(int marknum)&#123; for(int i=marknum+r+1;i&lt;=1000;i++) if(l[i]) return i; return 0; &#125; 错误的认为端点的覆盖范围之外的第一个点便是作为下一个端点，这就是我直观感觉犯的错误，应该认真理解和分析，对代码的理解和编写能力还算比以前有进步，但之前学习犯的错误，现在才认识算晚了]]></content>
      <categories>
        <category>解题记录</category>
        <category>贪心</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Maxnum Profit]]></title>
    <url>%2F2020%2F02%2F13%2FMaxnum-Profit%2F</url>
    <content type="text"><![CDATA[有意思的一道题，要细品(其实就是这样的题我也想想了一会，我是废物)，就感觉非常interesting、P28 code： 12345678910111213#include&lt;iostream&gt;using namespace std;int main()&#123;int n,s[200100],ans=-1000000000,i,j; cin&gt;&gt;n; for(int z=1;z&lt;=n;z++) cin&gt;&gt;s[z]; for(i=1,j=2;i&lt;n&amp;&amp;j&lt;=n;j++)&#123; if(s[j]-s[i]&gt;ans) ans=s[j]-s[i]; if(s[j]&lt;s[i]) i=j; &#125; cout&lt;&lt;ans;return 0;&#125; &ensp;注意及时最大利益为负值，也要输出，所以ans要初始化一个比可能的最小值还小的数值，更新最值还可以使用min，max函数，这样比较简洁，记得加库函数名。]]></content>
      <categories>
        <category>《挑战程序竞赛第一版》</category>
        <category>基础题</category>
      </categories>
      <tags>
        <tag>你细品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[InsertionSort]]></title>
    <url>%2F2020%2F02%2F13%2FinsertionSort%2F</url>
    <content type="text"><![CDATA[&ensp;基础的算法，注意其中的细节，你细品。 1234567891011121314151617181920212223#include&lt;iostream&gt;using namespace std;int insertionsort(int n,int a[]);int main()&#123; int n,a[101];cin&gt;&gt;n;for(int i=0;i&lt;n;i++) cin&gt;&gt;a[i];insertionsort(n,a);for(int i=0;i&lt;n;i++) cout&lt;&lt;a[i]&lt;&lt;&apos; &apos;;return 0;&#125;int insertionsort(int n,int a[])&#123; for(int i=1;i&lt;n;i++)&#123; int v=a[i]; int j=i-1; while(j&gt;=0&amp;&amp;v&lt;a[j])&#123; a[j+1]=a[j]; j--; &#125; a[j+1]=v; &#125;return 0;&#125;]]></content>
      <categories>
        <category>《挑战程序竞赛第一版》</category>
        <category>排序算法</category>
      </categories>
  </entry>
</search>
